version: "2"

services:
  db:
    image: postgres:latest
    env_file: .env
    container_name: gamehub-db
    environment:
      POSTGRES_USER: ${DB_SUPERUSER}
      POSTGRES_PASSWORD: ${DB_SUPERPSWD}
      POSTGRES_DB: ${DB_NAME}
      PGPORT: ${DB_PORT}

      STORE_DB_USER: ${STORE_DB_USER}
      STORE_DB_PSWD: ${STORE_DB_PSWD}

      BANK_DB_USER: ${BANK_DB_USER}
      BANK_DB_PSWD: ${BANK_DB_PSWD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init-scripts:/docker-entrypoint-initdb.d
      - ./database/store-init-csvs:/store-init-csvs
      - ./database/bank-init-csvs:/bank-init-csvs
    networks:
      - gamehub-net
    restart: always

  store-service:
    build: store-service
    ports:
      - "5000:5000"
    depends_on:
      - db
    environment:
      BANK_SERVICE_URL: http://bank-service:5001
      DB_HOST: db
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      DB_USER: ${STORE_DB_USER}
      DB_PSWD: ${STORE_DB_PSWD}
    volumes:
      - ./database/store-init-csvs:/tmp/init-csvs/
    networks:
      - gamehub-net

  bank-service:
    build: bank-service
    depends_on:
      - db
    environment:
      DB_HOST: db
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      DB_USER: ${BANK_DB_USER}
      DB_PSWD: ${BANK_DB_PSWD}
    ports:
      - "5001:5001"
    networks:
      - gamehub-net

  reverse-proxy:
    image: owasp/modsecurity-crs:nginx-alpine
    container_name: gamehub-rp
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d/app.conf:/etc/nginx/conf.d/app.conf:ro
      - ./nginx/certs:/etc/nginx/certs:ro
      - ./nginx/snippets:/etc/nginx/snippets:ro
      - ./nginx_logs:/var/log/nginx
    environment:
      # On - блокировать, DetectionOnly - только обнаруживать, Off - выключить.
      MODSEC_RULE_ENGINE: "On"
      # Уровень паранойи от 1 до 4.
      PARANOIA_LEVEL: "1"
      # Уровень логирования (error, warn, notice, info, debug)
      LOG_LEVEL: "warn"
    depends_on:
      - store-service
      -  bank-service
    networks:
      - gamehub-net
    restart: always

networks:
  gamehub-net:

volumes:
  postgres_data:
